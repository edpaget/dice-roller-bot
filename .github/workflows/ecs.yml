name: Deploy

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths:
      - roller_lang/**/*.rs
      - roller_discord/**/*.rs
      - roller_repl/**/*.rs
      - roller_lang/Cargo.toml
      - roller_discord/Cargo.toml
      - roller_repl/Cargo.toml
      - locales/app.yml
      - Cargo.toml
      - Cargo.lock
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: "x86_64-unknown-linux-musl"
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "dice-roller-release"
      - name: Build
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools
          cargo build --release --verbose --target x86_64-unknown-linux-musl

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: arn:aws:iam::311245061868:role/dice-roller-github-oidc-deployment-role

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: dice-roller
          SHA_TAG: ${{ github.sha }}
          BRANCH_TAG: ${{ github.ref_name }}
        run: |
          ls target/
          docker build \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHA_TAG \
            -t $ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$BRANCH_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-arn: arn:aws:ecs:us-east-2:311245061868:task-definition/dice-roller-ecs-task-definition
          container-name: dice-roller-container
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: dice-roller-ecs-service
          cluster: prod-dice-roller-ecs-cluster
          wait-for-service-stability: true
          force-new-deployment: true
